name: Build and test
on:
  push:
    paths:
      - .github/workflows/**
      - e2eTests/**
      - tests/**
      - todo_app/**
      - Dockerfile
      - poetry.lock
  pull_request:
    paths:
      - .github/workflows/**
      - e2eTests/**
      - tests/**
      - todo_app/**
      - Dockerfile
      - poetry.lock

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Integration test build
      uses: docker/build-push-action@v6
      with:
        context: .
        target: pipeline_integration_tests
        tags: todo-app:pipeline_integration_tests
        cache-from: type=gha
        cache-to: type=gha,mode=max
        github-token: ${{ secrets.CACHE_GITHUB_TOKEN }}
        load: true

    - name: Run integration tests
      run: docker run todo-app:pipeline_integration_tests

    - name: e2e tests build
      uses: docker/build-push-action@v6
      with:
        context: .
        target: pipeline_e2e_tests
        tags: todo-app:pipeline_e2e_tests
        cache-from: type=gha
        cache-to: type=gha,mode=max
        github-token: ${{ secrets.CACHE_GITHUB_TOKEN }}
        load: true

    - name: Run e2e tests
      run: >
        docker run
        -e FLASK_APP=todo_app/app
        -e TRELLO_TO_DO_BOARD_ID=65cb37a378d7b6f10d62c208
        -e TRELLO_ORGANIZATION_ID=65cb37900e446a315b3b1fbc
        -e TRELLO_API_KEY='TEST_API_KEY'
        -e TRELLO_API_TOKEN='TEST_API_TOKEN'
        todo-app:pipeline_e2e_tests

    - name: Check for vulnerabilities
      uses: snyk/actions/python-3.10@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Report pipeline status
      if: always()
      id: slack
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "name": ${{ toJson(format('Build and test: {0}', github.event.head_commit.message)) }},
            "status": "${{ job.status }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  deploy:
    name: Build and deploy
    needs: test
    if:  github.event_name == 'push' && github.ref == 'refs/heads/exercise-9'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push production image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          target: production
          tags: trwoodward/todo-app, trwoodward/todo-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          github-token: ${{ secrets.CACHE_GITHUB_TOKEN }}

      - name: Restart App Service
        run: curl -dH -X POST '${{ secrets.APP_SERVICE_WEBHOOK }}'

      - name: Report pipeline status
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "name": ${{ toJson(format('Deploy: {0}', github.event.head_commit.message)) }},
              "status": "${{ job.status }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
